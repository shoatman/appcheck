{
    "swagger": "2.0",
    "info": {
        "title": "Azure Active Directory",
        "description": "Identity and access management services",
        "version": "1.5"
    },
    "host": "graph.windows.net",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "parameters": {
        "tenantIdParam": {
            "name": "tenantId",
            "in": "path",
            "description": "The ID of the tenant of instance of Azure Active Directory",
            "required": true,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "authorizationHeaderParam": {
            "name": "Authorization",
            "in": "header",
            "description": "Contains the bearer token used to authorize access to the API.",
            "required": true,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "apiVersionParam": {
            "name": "api-version",
            "in": "query",
            "description": "Specifies the version of the API that you would like to use.",
            "required": false,
            "type": "string",
            "default": "1.5",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "filterParam": {
            "name": "$filter",
            "in": "query",
            "description": "The oData v3.0 filter statement.  Controls which objects are returned.",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "trustedIssuerParam": {
            "name": "trustedIssuer",
            "in": "query",
            "description": "If this is not provided then value will default to all trustedIssuer for the tenant.",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "trustedIssuerSkiParam": {
            "name": "trustedIssuerSki",
            "in": "query",
            "description": "Needed if there are more than one certificates from the same CA. If this is not provided then value will default to all trustedIssuerSKI for the tenant.",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "authorityTypeParam": {
            "name": "authorityType",
            "in": "query",
            "description": "Needed if there are more than one certificates from the same CA. If this is not provided then value will default to all trustedIssuerSKI for the tenant.",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "crlDistributionPointParam": {
            "name": "crlDistributionPoint",
            "in": "query",
            "description": "Needed if there are more than one certificates from the same CA. If this is not provided then value will default to all trustedIssuerSKI for the tenant.",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "deltaCrlDistributionPointParam": {
            "name": "deltaCrlDistributionPoint",
            "in": "query",
            "description": "Needed if there are more than one certificates from the same CA. If this is not provided then value will default to all trustedIssuerSKI for the tenant.",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "trustedCertificateParam": {
            "name": "trustedCertificate",
            "in": "query",
            "description": "Needed if there are more than one certificates from the same CA. If this is not provided then value will default to all trustedIssuerSKI for the tenant.",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "topParam": {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "The maximum number of records to return.",
            "type": "integer",
            "default": 100,
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "orderByParam": {
            "name": "$orderby",
            "in": "query",
            "description": "The oData v3.0 orderby statement.  Controls the order in which the results are returned.",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "skipTokenParam": {
            "name": "$skiptoken",
            "in": "query",
            "description": "Skiptoken use to page forward through a large result set..",
            "required": false,
            "type": "string",
            "x-powershell-hide": true,
            "x-powershell-required": false
        },
        "odataLinkParam": {
            "name": "link",
            "in": "body",
            "description": "a link to a specific Azure Active Directory object",
            "required": true,
            "schema": {
                "$ref": "#/definitions/odata.link"
            },
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "objectIdParam": {
            "name": "objectId",
            "in": "path",
            "description": "The unique identifier of the object specific Azure Active Directory object",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "userIdParam": {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of a user in Azure Active Directory (UPN or ObjectId)",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "directoryRoleIdParam": {
            "name": "directoryRoleId",
            "in": "path",
            "description": "The unique identifier of a directory role in Azure Active Directory (ObjectId)",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "contactIdParam": {
            "name": "contactId",
            "in": "path",
            "description": "The unique identifier of a contact in Azure Active Directory (ObjectId)",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "deviceIdParam": {
            "name": "deviceId",
            "in": "path",
            "description": "The unique identifier of a device in Azure Active Directory (ObjectId)",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "groupIdParam": {
            "name": "groupId",
            "in": "path",
            "description": "The unique identifier of a group in Azure Active Directory (ObjectId)",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "oAuth2PermissionGrantIdParam": {
            "name": "oAuth2PermissionGrantId",
            "in": "path",
            "description": "The unique identifier of an oAuth2PermissionGrant in Azure Active Directory",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "appObjectIdParam": {
            "name": "appObjectId",
            "in": "path",
            "description": "THe unique idenfier of an application in Azure Active Directory",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        },
        "spObjectIdParam": {
            "name": "spObjectId",
            "in": "path",
            "description": "THe unique idenfier of an application in Azure Active Directory",
            "required": true,
            "type": "string",
            "x-powershell-hide": false,
            "x-powershell-required": true
        }
    },
    "responses": {
        "unexpectedErrorResponse": {
            "description": "Unexpected error",
            "headers": {
                "ocp-aad-diagnositcs-server-name": {
                    "type": "string",
                    "description": "The identifier for the server that performed the requested operation."
                },
                "ocp-aad-session-key": {
                    "description": "The key that identifies the current session with the directory service.",
                    "type": "string"
                }
            },
            "schema": {
                "$ref": "#/definitions/odata.error"
            }
        },
        "successResponse": {
            "description": "Success",
            "headers": {
                "ocp-aad-diagnositcs-server-name": {
                    "type": "string",
                    "description": "The identifier for the server that performed the requested operation."
                },
                "ocp-aad-session-key": {
                    "description": "The key that identifies the current session with the directory service.",
                    "type": "string"
                }
            }
        }
    },
    "paths": {
        "/{tenantId}/users": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUsers",
                "x-powershell-paging": true,
                "x-powershell-filterable": true,
                "operationId": "GetUsers",
                "summary": "Retrieves a list of users in Azure Active Directory based on provided query parameters",
                "description": "Retrieves a list of users in Azure Active Directory based on provided oData query paramters including: $filter, $orderby, $top",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/filterParam"
                    },
                    {
                        "$ref": "#/parameters/topParam"
                    },
                    {
                        "$ref": "#/parameters/orderByParam"
                    }

                ],
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "schema": {
                            "$ref": "#/definitions/getUsersResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADUser",
                "operationId": "CreateUser",
                "summary": "Create a new user in Azure Active Directory",
                "description": "Creates a new user in Azure Active Directory.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "New user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A list of users",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUser",
                "operationId": "GetUser",
                "summary": "Retrieves a specific user from Azure Active Directory",
                "description": "Retreives a specific user (user object) from Azure Active Directory by objectId or UPN.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the matching user object",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "patch": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADUser",
                "operationId": "UpdateUser",
                "summary": "Updates a specific user in Azure Active Directory",
                "description": "Updates a user (user object) identified by objectId or UPN in Azure Active Directory",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "user with updated fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADUser",
                "operationId": "DeleteUser",
                "summary": "Deletes a specific user in Azure Active Directory",
                "description": "Deletes a user (user object) identified by objectId or UPN in Azure Active Directory",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/manager": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserManager",
                "operationId": "GetUserManager",
                "summary": "Retrieves the manager of a user from Azure Active Directory",
                "description": "Retrieves the manager of a user from Azure Active Directory.  A manager can be a user or contact object.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The manager of the provided user.",
                        "schema": {
                            "$ref": "#/definitions/directoryObject"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/$links/manager": {
            "put": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADUserManager",
                "operationId": "UpdateUserManager",
                "summary": "Updates the user's manager in Azure Active Directory",
                "description": "Updates the user's manager in Azure Active Directory.  A manager can be a user or contact object.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    },
                    {
                        "$ref": "#/parameters/odataLinkParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADUserManager",
                "operationId": "DeleteUserManager",
                "summary": "Deletes the user's manager in Azure Active Directory",
                "description": "Deletes the user's manager in Azure Active Directory.  A manager can be a user or contact object.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/directReports": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserDirectReports",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetUserDirectReports",
                "summary": "Get the user's direct reports.",
                "description": "Get the user's direct reports.  Direct reports are users who have their manager attribute set to the current user.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The direct reports of the provided user.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/memberOf": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserMemberships",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetUserMemberships",
                "summary": "Get user memberships.",
                "description": "Get a list of groups and directory roles that the user is a member of.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/filterParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The memberships (role, group) of the provided user.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/ownedDevices": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserOwnedDevices",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetUserOwnedDevices",
                "summary": "Get registered devices owned by the user.",
                "description": "Get registered devices owned by the user.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The devices owned by the provided user.",
                        "schema": {
                            "$ref": "#/definitions/getDevicesResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/registeredDevices": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserRegisteredDevices",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetUserRegisteredDevices",
                "summary": "Get registered devices registered by the user.",
                "description": "Get registered devices registered by the user.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The devices registered by the provided user.",
                        "schema": {
                            "$ref": "#/definitions/getDevicesResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/oauth2PermissionGrants": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserOAuth2PermissionGrants",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetUserOAuth2PermissionGrants",
                "summary": "Get the list of the oAuth2PermissionGrants that the user granted applications.",
                "description": "Get the list of the oAuth2PermissionGrants that the user granted applications.  These permissions are typically granted when an application asked for a specific permission to a resource that the user has discretion over.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The devices registered by the provided user.",
                        "schema": {
                            "$ref": "#/definitions/getOAuth2PermissionGrantsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/createdObjects": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserCreatedObjects",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetUserCreatedObjects",
                "summary": "Get objects created by the user.",
                "description": "Get objects created by the user.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The devices registered by the provided user.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/ownedObjects": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserOwnedObjects",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetUserOwnedObjects",
                "summary": "Get objects owned by the user.",
                "description": "Get objects owned by the user.",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The devices registered by the provided user.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/appRoleAssignments": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserAppRoleAssignments",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetUserAppRoleAssignments",
                "summary": "Get user application role assignments.",
                "description": "Get user application role assignments.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getAppRoleAssignmentsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADUserAppRoleAssignment",
                "operationId": "CreateUserAppRoleAssignment",
                "summary": "Assign a user to an application role.",
                "description": "Assign a user to an application role.  If no roles exist use guid.empty (all 0000)",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    },
                    {
                        "name": "appRoleAssignment",
                        "in": "body",
                        "description": "New app role assignment",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appRoleAssignment"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "the created app role assignment",
                        "schema": {
                            "$ref": "#/definitions/appRoleAssignment"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/appRoleAssignments/{objectId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADUserAppRoleAssignment",
                "operationId": "DeleteUserAppRoleAssignment",
                "summary": "Delete a user application role assignment.",
                "description": "Delete a user application role assignment.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    },
                    {
                        "$ref": "#/parameters/objectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/extensionProperties": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADUserExtensionProperties",
                "operationId": "GetUserExtensionProperties",
                "summary": "Get user extension properties",
                "description": "Get user extension properties",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getExtensionPropertiesResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/assignLicense": {
            "post": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADUserLicenses",
                "operationId": "SetUserLicenses",
                "summary": "Add and remove one or more licenses for a Microsoft online service to the list of assigned licenses for the user.",
                "description": "Add and remove one or more licenses for a Microsoft online service to the list of assigned licenses for the user.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    },
                    {
                        "name": "licensesParam",
                        "in": "body",
                        "description": "A list of licenses to be assigned and those to be removed.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/assignLicenseParam"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/users/{userId}/checkMemberGroups": {
            "post": {
                "x-powershell-verb": "Select",
                "x-powershell-noun": "AzureADGroupIdsUserIsMemberOf",
                "operationId": "SelectAzureADGroupIdsUserIsMemberOf",
                "summary": "From a list of groups Ids select those that the user is a member of.",
                "description": "From a list of groups Ids select those that the user is a member of.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/userIdParam"
                    },
                    {
                        "name": "checkMemberGroupsParam",
                        "in": "body",
                        "description": "A list of groups object ids.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/checkMemberGroupsParam"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The group objects ids that the user was a member of.",
                        "schema": {
                            "$ref": "#/definitions/checkMemberGroupsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/subscribedSkus": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADSubscribedSkus",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetSubscribedSkus",
                "summary": "Retrieves a list of subscribed skus (subscriptions) to Microsoft services.",
                "description": "Retrieves a list of subscribed skus (subscriptions) to Microsoft services.",
                "tags": [
                    "SubscribedSku"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of subscribed skus.",
                        "schema": {
                            "$ref": "#/definitions/getSubscribedSkuResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/tenantDetails": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADTenantDetails",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetTenantDetails",
                "summary": "Retrieves the details of a tenant in Azure Active Directory",
                "description": "Retrieves the details of a tenant in Azure Active Directory",
                "tags": [
                    "TenantDetail"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list tenantDetail objects.",
                        "schema": {
                            "$ref": "#/definitions/getTenantDetailsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/tenantDetails/{tenantId}/trustedCAsForPasswordlessAuth": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADTrustedCertificateAuthorities",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetTrustedCertificateAuthorities",
                "summary": "Retrieves the list of trusted certificate authorities for a tenant in Azure Active Directory",
                "description": "Retrieves the list of trusted certificate authorities for a tenant in Azure Active Directory",
                "tags": [
                    "TrustedCertificateAuthorities"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list tenantDetail objects.",
                        "schema": {
                            "$ref": "#/definitions/getCertificateAuthorityInformationsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADTrustedCertificateAuthority",
                "operationId": "CreateAzureADTrustedCertificateAuthority",
                "summary": "Create a new trusted certificate authority in Azure Active Directory",
                "description": "Creates a new trusted certificate authority in Azure Active Directory.",
                "tags": [
                    "CertificateAuthority"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "name": "certificateAuthority",
                        "in": "body",
                        "description": "New trusted certificate authority",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/certificateAuthorityInformation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Newly created certificate authority information",
                        "schema": {
                            "$ref": "#/definitions/certificateAuthorityInformation"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/directoryRoleTemplate": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADDirectoryRoleTemplates",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetDirectoryRoleTemplates",
                "summary": "Retrieves a list of directory role templates in Azure Active Directory",
                "description": "Retrieves a list of directory role templates in Azure Active Directory",
                "tags": [
                    "DirectoryRoleTemplate"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of directory role templates.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryRoleTemplateResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/directoryRoles": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADDirectoryRoles",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetDirectoryRoles",
                "summary": "Retrieves a list of directory roles in Azure Active Directory based on provided query parameters",
                "description": "Retrieves a list of director roles in Azure Active Directory based on provided oData query paramters including: $filter, $orderby, $top",
                "tags": [
                    "DirectoryRole"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of directory roles.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryRolesResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "Enable",
                "x-powershell-verbType": "VerbsLifecycle",
                "x-powershell-noun": "AzureADDirectoryRole",
                "operationId": "ActivateDirectoryRole",
                "summary": "Activates an existing directory role in Azure Active Directory",
                "description": "Activates an existing directory role in Azure Active Directory.",
                "tags": [
                    "DirectoryRole"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "name": "directoryRole",
                        "in": "body",
                        "description": "Azure active directory role.  Only the roleTemplateId is required.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/directoryRole"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A directory role",
                        "schema": {
                            "$ref": "#/definitions/directoryRole"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/directoryRole/{directoryRoleId}": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADDirectoryRole",
                "operationId": "GetDirectoryRole",
                "summary": "Retrieves a specific directory role from Azure Active Directory",
                "description": "Retreives a specific directory role (directory role object) from Azure Active Directory by objectId.",
                "tags": [
                    "DirectoryRole"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/directoryRoleIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the matching directory role object",
                        "schema": {
                            "$ref": "#/definitions/directoryRole"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/directoryRole/{directoryRoleId}/members": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADDirectoryRoleMembers",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetAzureADDirectoryRoleMembers",
                "summary": "Get the members of a directory role.",
                "description": "Get the members of a directory role.",
                "tags": [
                    "DirectoryRole"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/directoryRoleIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The members of the directory role.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/directoryRole/{directoryRoleId}/$links/members": {
            "post": {
                "x-powershell-verb": "Add",
                "x-powershell-noun": "AzureADDirectoryRoleMember",
                "operationId": "AddDirectoryRoleMember",
                "summary": "Add a member to a group",
                "description": "Add a member to a directory role.  (User, Group, Contact)",
                "tags": [
                    "DirectoryRole"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/directoryRoleIdParam"
                    },
                    {
                        "$ref": "#/parameters/odataLinkParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/directoryRole/{directoryRoleId}/$links/members/{objectId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADDirectoryRoleMember",
                "operationId": "RemoveDirectoryMember",
                "summary": "Removes a specific member of a directory role.",
                "description": "Removes a specific member of a directory role.",
                "tags": [
                    "DirectoryRole"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/directoryRoleIdParam"
                    },
                    {
                        "$ref": "#/parameters/objectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/contacts": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADContacts",
                "x-powershell-paging": true,
                "x-powershell-filterable": true,
                "operationId": "GetContacts",
                "summary": "Retrieves a list of contacts in Azure Active Directory based on provided query parameters",
                "description": "Retrieves a list of contacts in Azure Active Directory based on provided oData query paramters including: $filter, $orderby, $top",
                "tags": [
                    "Contact"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/filterParam"
                    },
                    {
                        "$ref": "#/parameters/topParam"
                    },
                    {
                        "$ref": "#/parameters/orderByParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of contacts",
                        "schema": {
                            "$ref": "#/definitions/getContactsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADContact",
                "operationId": "CreateContact",
                "summary": "Create a new contact in Azure Active Directory",
                "description": "Creates a new contact in Azure Active Directory.",
                "tags": [
                    "Contact"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "name": "contact",
                        "in": "body",
                        "description": "New contact",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A contact",
                        "schema": {
                            "$ref": "#/definitions/contact"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/contacts/{contactId}": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADContact",
                "operationId": "GetContact",
                "summary": "Retrieves a specific contact from Azure Active Directory",
                "description": "Retreives a specific contact (contact object) from Azure Active Directory by objectId.",
                "tags": [
                    "Contact"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the matching contact object",
                        "schema": {
                            "$ref": "#/definitions/contact"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "patch": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADContact",
                "operationId": "UpdateContact",
                "summary": "Updates a specific contact in Azure Active Directory",
                "description": "Updates a contact (contact object) identified by objectId",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    },
                    {
                        "name": "contact",
                        "in": "body",
                        "description": "contact with updated fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contact"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADContact",
                "operationId": "DeleteContact",
                "summary": "Deletes a specific contact in Azure Active Directory",
                "description": "Deletes a contact (contact object) identified by objectId",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/contacts/{contactId}/manager": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADContactManager",
                "operationId": "GetContactManager",
                "summary": "Retrieves the manager of a contact from Azure Active Directory",
                "description": "Retrieves the manager of a contact from Azure Active Directory.  A manager can be a user or contact object.",
                "tags": [
                    "Contact"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The manager of the provided contact.",
                        "schema": {
                            "$ref": "#/definitions/directoryObject"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/contacts/{contactId}/$links/manager": {
            "put": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADContactManager",
                "operationId": "UpdateContactManager",
                "summary": "Updates the contact's manager in Azure Active Directory",
                "description": "Updates the contact's manager in Azure Active Directory.  A manager can be a user or contact object.",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    },
                    {
                        "$ref": "#/parameters/odataLinkParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADContactManager",
                "operationId": "DeleteContactManager",
                "summary": "Deletes the contact's manager in Azure Active Directory",
                "description": "Deletes the contact's manager in Azure Active Directory.  A manager can be a user or contact object.",
                "tags": [
                    "Contact"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/contacts/{contactId}/directReports": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADContactDirectReports",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetContactDirectReports",
                "summary": "Get the contact's direct reports.",
                "description": "Get the contact's direct reports.  Direct reports are users who have their manager attribute set to the current contact.",
                "tags": [
                    "Contact"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The direct reports of the provided contact.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/contacts/{contactId}/memberOf": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADContactMemberships",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetContactMemberships",
                "summary": "Get contact memberships.",
                "description": "Get a list of groups and directory roles that the contact is a member of.",
                "tags": [
                    "Contact"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The memberships (role, group) of the provided contact.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/contacts/{contactId}/checkMemberGroups": {
            "post": {
                "x-powershell-verb": "Select",
                "x-powershell-noun": "AzureADGroupIdsContactIsMemberOf",
                "operationId": "SelectAzureADGroupIdsContactIsMemberOf",
                "summary": "From a list of groups Ids select those that the contact is a member of.",
                "description": "From a list of groups Ids select those that the contact is a member of.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/contactIdParam"
                    },
                    {
                        "name": "checkMemberGroupsParam",
                        "in": "body",
                        "description": "A list of groups object ids.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/checkMemberGroupsParam"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The group objects ids that the contact was a member of.",
                        "schema": {
                            "$ref": "#/definitions/checkMemberGroupsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/devices": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADDevices",
                "x-powershell-paging": true,
                "x-powershell-filterable": true,
                "operationId": "GetDevices",
                "summary": "Retrieves a list of devices in Azure Active Directory based on provided query parameters",
                "description": "Retrieves a list of devices in Azure Active Directory based on provided oData query paramters including: $filter, $orderby, $top",
                "tags": [
                    "Device"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/filterParam"
                    },
                    {
                        "$ref": "#/parameters/topParam"
                    },
                    {
                        "$ref": "#/parameters/orderByParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of devices",
                        "schema": {
                            "$ref": "#/definitions/getDevicesResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADDevice",
                "operationId": "CreateDevice",
                "summary": "Create a new device in Azure Active Directory",
                "description": "Creates a new device in Azure Active Directory.",
                "tags": [
                    "Device"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "name": "device",
                        "in": "body",
                        "description": "New device",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/device"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A device",
                        "schema": {
                            "$ref": "#/definitions/device"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/devices/{deviceId}": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADDevice",
                "operationId": "GetDevice",
                "summary": "Retrieves a specific device from Azure Active Directory",
                "description": "Retreives a specific device (device object) from Azure Active Directory by objectId.",
                "tags": [
                    "Device"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/deviceIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the matching device object",
                        "schema": {
                            "$ref": "#/definitions/device"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "patch": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADDevice",
                "operationId": "UpdateDevice",
                "summary": "Updates a specific device in Azure Active Directory",
                "description": "Updates a device (device object) identified by objectId",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/deviceIdParam"
                    },
                    {
                        "name": "device",
                        "in": "body",
                        "description": "device with updated fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/device"
                        }
                    }
                ],
                "tags": [
                    "Device"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADDevice",
                "operationId": "DeleteDevice",
                "summary": "Deletes a specific device in Azure Active Directory",
                "description": "Deletes a device (device object) identified by objectId",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/deviceIdParam"
                    }
                ],
                "tags": [
                    "Device"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/oauth2PermissionGrants": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADOAuth2PermissionGrants",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetOAuth2PermissionGrants",
                "summary": "Get a list of all oAuth2PermissionGrants granted by users within the directory.",
                "description": "Get the list of oAuth2PermissionGrants granted by users within the directory.  These permissions are typically granted when an application asked for a specific permission to a resource that the user has discretion over.",
                "tags": [
                    "oAuth2PermissionGrant"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of oAuth2PermissionGrants",
                        "schema": {
                            "$ref": "#/definitions/getOAuth2PermissionGrantsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/oauth2PermissionGrants/{oAuth2PermissionGrantId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADOAuth2PermissionGrants",
                "operationId": "DeleteOAuth2PermissionGrant",
                "summary": "Delete an oAuth2PermissionGrant.",
                "description": "Delete an oAuth2PermissionGrant.  These permissions are typically granted when an application asked for a specific permission to a resource that the user has discretion over.",
                "tags": [
                    "oAuth2PermissionGrant"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/oAuth2PermissionGrantIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADGroups",
                "x-powershell-paging": true,
                "x-powershell-filterable": true,
                "operationId": "GetGroups",
                "summary": "Get a list of all groups within the directory.",
                "description": "Get a list of all groups within the directory.",
                "tags": [
                    "Group"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/filterParam"
                    },
                    {
                        "$ref": "#/parameters/topParam"
                    },
                    {
                        "$ref": "#/parameters/orderByParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of groups",
                        "schema": {
                            "$ref": "#/definitions/getGroupsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADGroup",
                "operationId": "CreateGroup",
                "summary": "Create a new group in Azure Active Directory",
                "description": "Create a new group in Azure Active Directory.",
                "tags": [
                    "Group"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "name": "group",
                        "in": "body",
                        "description": "New group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The created group",
                        "schema": {
                            "$ref": "#/definitions/group"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups/{groupId}": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADGroup",
                "operationId": "GetGroup",
                "summary": "Get a group by objectId",
                "description": "Get a group by objectId from Azure Active Directory",
                "tags": [
                    "Group"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A group",
                        "schema": {
                            "$ref": "#/definitions/group"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADGroup",
                "operationId": "DeleteGroup",
                "summary": "Delete a group by objectId.",
                "description": "Delete a group by objectId.",
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "patch": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADGroup",
                "operationId": "UpdateGroup",
                "summary": "Updates a specific group in Azure Active Directory",
                "description": "Updates a group (group object) identified by objectId in Azure Active Directory",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    },
                    {
                        "name": "group",
                        "in": "body",
                        "description": "group with updated fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group"
                        }
                    }
                ],
                "tags": [
                    "Group"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups/{groupId}/owners": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADGroupOwners",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetGroupOwners",
                "summary": "Get owners of a group.",
                "description": "Get the owners of a group.",
                "tags": [
                    "Group"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The owners of the group.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups/{groupId}/$links/owners": {
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADGroupOwner",
                "operationId": "AddGroupOwner",
                "summary": "Add an owner to a group",
                "description": "Add an owner to a group.",
                "tags": [
                    "Group"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    },
                    {
                        "$ref": "#/parameters/odataLinkParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups/{groupId}/$links/owners/{objectId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADGroupOwner",
                "operationId": "RemoveGroupOwner",
                "summary": "Removes an owner from a group.",
                "description": "Removes an owner from a group.",
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    },
                    {
                        "$ref": "#/parameters/objectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups/{groupId}/appRoleAssignments": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADGroupAppRoleAssignments",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetGroupAppRoleAssignments",
                "summary": "Get group application role assignments.",
                "description": "Get group application role assignments.",
                "tags": [
                    "Group"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getAppRoleAssignmentsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADGroupAppRoleAssignment",
                "operationId": "CreateGroupAppRoleAssignment",
                "summary": "Assign a group of users to an application role.",
                "description": "Assign a groups of users to an application role.  If no roles exist use guid.empty (all 0000)",
                "tags": [
                    "Group"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    },
                    {
                        "name": "appRoleAssignment",
                        "in": "body",
                        "description": "New app role assignment",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appRoleAssignment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "the created app role assignment",
                        "schema": {
                            "$ref": "#/definitions/appRoleAssignment"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups/{groupId}/appRoleAssignments/{objectId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADGroupAppRoleAssignment",
                "operationId": "DeleteGroupAppRoleAssignment",
                "summary": "Delete a group application role assignment.",
                "description": "Delete a group application role assignment.",
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    },
                    {
                        "$ref": "#/parameters/objectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups/{groupId}/extensionProperties": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADGroupExtensionProperties",
                "operationId": "GetGroupExtensionProperties",
                "summary": "Get group extension properties",
                "description": "Get group extension properties",
                "tags": [
                    "Group"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getExtensionPropertiesResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/groups/{groupId}/checkMemberGroups": {
            "post": {
                "x-powershell-verb": "Select",
                "x-powershell-noun": "AzureADGroupIdsGroupIsMemberOf",
                "operationId": "SelectAzureADGroupIdsGroupIsMemberOf",
                "summary": "From a list of groups Ids select those that the group is a member of.",
                "description": "From a list of groups Ids select those that the group is a member of.",
                "tags": [
                    "Group"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/groupIdParam"
                    },
                    {
                        "name": "checkMemberGroupsParam",
                        "in": "body",
                        "description": "A list of groups object ids.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/checkMemberGroupsParam"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The group objects ids that the user was a member of.",
                        "schema": {
                            "$ref": "#/definitions/checkMemberGroupsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/applications": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADApplications",
                "x-powershell-paging": true,
                "x-powershell-filterable": true,
                "operationId": "GetApplications",
                "summary": "Get a list of all applications within the directory.",
                "description": "Get a list of all applications within the directory.",
                "tags": [
                    "Application"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/filterParam"
                    },
                    {
                        "$ref": "#/parameters/topParam"
                    },
                    {
                        "$ref": "#/parameters/orderByParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of applications",
                        "schema": {
                            "$ref": "#/definitions/getApplicationsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADApplication",
                "operationId": "CreateApplication",
                "summary": "Create a new application in Azure Active Directory",
                "description": "Create a new application in Azure Active Directory.",
                "tags": [
                    "Application"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "name": "application",
                        "in": "body",
                        "description": "New application",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/application"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "the created application",
                        "schema": {
                            "$ref": "#/definitions/application"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/applications/{appObjectId}": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADApplication",
                "operationId": "GetApplication",
                "summary": "Get an application by objectId",
                "description": "Get an application by objectId from Azure Active Directory",
                "tags": [
                    "Application"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application found",
                        "schema": {
                            "$ref": "#/definitions/application"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADApplication",
                "operationId": "DeleteApplication",
                "summary": "Delete an application by objectId.",
                "description": "Delete an application by objectId.",
                "tags": [
                    "Application"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "patch": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADApplication",
                "operationId": "UpdateApplication",
                "summary": "Updates a specific application in Azure Active Directory",
                "description": "Updates an application (application object) identified by objectId in Azure Active Directory",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    },
                    {
                        "name": "application",
                        "in": "body",
                        "description": "application with updated fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/application"
                        }
                    }
                ],
                "tags": [
                    "Application"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/applications/{appObjectId}/extensionProperties": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADApplicationExtensionProperties",
                "operationId": "GetApplicationExtensionProperties",
                "summary": "Get group extension properties",
                "description": "Get group extension properties",
                "tags": [
                    "Application"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getExtensionPropertiesResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADApplicationExtensionProperty",
                "operationId": "CreateApplicationExtensionProperty",
                "summary": "Create application extension property",
                "description": "Get application extension property",
                "tags": [
                    "Application"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    },
                    {
                        "name": "extensionProperty",
                        "in": "body",
                        "description": "New extension property",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extensionProperty"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "the created extension property",
                        "schema": {
                            "$ref": "#/definitions/extensionProperty"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/applications/{appObjectId}/extensionProperties/{objectId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADApplicationExtensionProperty",
                "operationId": "DeleteApplicationExtensionProperty",
                "summary": "Delete an application extension property.",
                "description": "Delete an application extension property.",
                "tags": [
                    "Application"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    },
                    {
                        "$ref": "#/parameters/objectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/applications/{appObjectId}/owners": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADApplicationOwners",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetApplicationOwners",
                "summary": "Get owners of an application.",
                "description": "Get the owners of an application.",
                "tags": [
                    "Application"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The owners of the application.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/applications/{appObjectId}/$links/owners": {
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADApplicationOwner",
                "operationId": "AddApplicationOwner",
                "summary": "Add an owner to an application",
                "description": "Add an owner to an application.",
                "tags": [
                    "Application"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    },
                    {
                        "$ref": "#/parameters/odataLinkParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/applications/{appObjectId}/$links/owners/{objectId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADApplicationOwner",
                "operationId": "RemoveApplicationOwner",
                "summary": "Removes an owner from an application.",
                "description": "Removes an owner from an application.",
                "tags": [
                    "Application"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/appObjectIdParam"
                    },
                    {
                        "$ref": "#/parameters/objectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServicePrincipals",
                "x-powershell-paging": true,
                "x-powershell-filterable": true,
                "operationId": "GetServicePrincipals",
                "summary": "Get a list of all applications within the directory.",
                "description": "Get a list of all applications within the directory.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/filterParam"
                    },
                    {
                        "$ref": "#/parameters/topParam"
                    },
                    {
                        "$ref": "#/parameters/orderByParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of service principals",
                        "schema": {
                            "$ref": "#/definitions/getServicePrincipalsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADServicePrincipal",
                "operationId": "CreateServicePrincipal",
                "summary": "Create a new application in Azure Active Directory",
                "description": "Create a new application in Azure Active Directory.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "name": "group",
                        "in": "body",
                        "description": "New service principal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/servicePrincipal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "the created service principal assignment",
                        "schema": {
                            "$ref": "#/definitions/servicePrincipal"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServicePrincipal",
                "operationId": "GetServicePrincipal",
                "summary": "Get a service principal by objectId",
                "description": "Get a service principal by objectId from Azure Active Directory",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ServicePrincipal found",
                        "schema": {
                            "$ref": "#/definitions/servicePrincipal"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADServicePrincipal",
                "operationId": "DeleteServicePrincipal",
                "summary": "Delete an application by objectId.",
                "description": "Delete an application by objectId.",
                "tags": [
                    "ServicePrincipal"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "patch": {
                "x-powershell-verb": "Set",
                "x-powershell-noun": "AzureADServicePrincipal",
                "operationId": "UpdateServicePrincipal",
                "summary": "Updates a service principal in Azure Active Directory",
                "description": "Updates a service principal (service principal object) identified by objectId in Azure Active Directory",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    },
                    {
                        "name": "group",
                        "in": "body",
                        "description": "service principal with updated fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/servicePrincipal"
                        }
                    }
                ],
                "tags": [
                    "ServicePrincipal"
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/extensionProperties": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServicePrincipalExtensionProperties",
                "operationId": "GetServicePrincipalExtensionProperties",
                "summary": "Get service principal extension properties",
                "description": "Get service principal extension properties",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getExtensionPropertiesResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/owners": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServicePrincipalOwners",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetServicePrincipalOwners",
                "summary": "Get owners of a service principal.",
                "description": "Get the owners of a service principal.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The owners of the service principal.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/$links/owners": {
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADServicePrincipalOwner",
                "operationId": "AddServicePrincipalOwner",
                "summary": "Add an owner to a service principal",
                "description": "Add an owner to a service principal.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    },
                    {
                        "$ref": "#/parameters/odataLinkParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/$links/owners/{objectId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADServicePrincipalOwner",
                "operationId": "RemoveServicePrincipalOwner",
                "summary": "Removes an owner from a service principal.",
                "description": "Removes an owner from a service principal.",
                "tags": [
                    "ServicePrincipal"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    },
                    {
                        "$ref": "#/parameters/objectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/memberOf": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServicePrincipalMemberships",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetServicePrincipalMemberships",
                "summary": "Get service principal memberships.",
                "description": "Get a list of groups and directory roles that the service principal is a member of.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The memberships of the service principal.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/oauth2PermissionGrants": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServicePrincipalOAuth2PermissionGrants",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetServicePrincipalOAuth2PermissionGrants",
                "summary": "Get the list of the oAuth2PermissionGrants that a user granted this service principal.",
                "description": "Get the list of the oAuth2PermissionGrants that the user granted this service principal.  These permissions are typically granted when an application asked for a specific permission to a resource that the user has discretion over.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The permissions that the service principal has been granted to another service principal.",
                        "schema": {
                            "$ref": "#/definitions/getOAuth2PermissionGrantsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/createdObjects": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServicePrincipalCreatedObjects",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetServicePrincipalCreatedObjects",
                "summary": "Get objects created by the service principal.",
                "description": "Get objects created by the service principal.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The objects created by the service principal.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/ownedObjects": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServicePrincipalOwnedObjects",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetServicePrincipalOwnedObjects",
                "summary": "Get objects owned by the service principal.",
                "description": "Get objects owned by the service principal.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The objects owned by the service principal.",
                        "schema": {
                            "$ref": "#/definitions/getDirectoryObjectsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/appRoleAssignments": {
            "get": {
                "x-powershell-verb": "Get",
                "x-powershell-noun": "AzureADServiceAppRoleAssignments",
                "x-powershell-paging": true,
                "x-powershell-filterable": false,
                "operationId": "GetServicePrincipalAppRoleAssignments",
                "summary": "Get service principal application role assignments.",
                "description": "Get user application role assignments.  Yes service principals can be assigned to application roles.",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/skipTokenParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/getAppRoleAssignmentsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            },
            "post": {
                "x-powershell-verb": "New",
                "x-powershell-noun": "AzureADServiceAppRoleAssignment",
                "operationId": "CreateServicePrincipalAppRoleAssignment",
                "summary": "Assign a service principal to an application role.",
                "description": "Assign a service principal to an application role.  If no roles exist use guid.empty (all 0000)",
                "tags": [
                    "ServicePrincipal"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    },
                    {
                        "name": "appRoleAssignment",
                        "in": "body",
                        "description": "New app role assignment",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appRoleAssignment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "the created app role assignment",
                        "schema": {
                            "$ref": "#/definitions/appRoleAssignment"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/appRoleAssignments/{objectId}": {
            "delete": {
                "x-powershell-verb": "Remove",
                "x-powershell-noun": "AzureADServiceAppRoleAssignment",
                "operationId": "DeleteServicePrincipalAppRoleAssignment",
                "summary": "Delete a service principal application role assignment.",
                "description": "Delete a service principal application role assignment.",
                "tags": [
                    "ServicePrincipal"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    },
                    {
                        "$ref": "#/parameters/objectIdParam"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/successResponse"
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        },
        "/{tenantId}/servicePrincipals/{spObjectId}/checkMemberGroups": {
            "post": {
                "x-powershell-verb": "Select",
                "x-powershell-noun": "AzureADGroupIdsServicePrincipalIsMemberOf",
                "operationId": "SelectAzureADGroupIdsServicePrincipalIsMemberOf",
                "summary": "From a list of groups Ids select those that the service principal is a member of.",
                "description": "From a list of groups Ids select those that the service principal is a member of.",
                "tags": [
                    "ServicePrincipal"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantIdParam"
                    },
                    {
                        "$ref": "#/parameters/authorizationHeaderParam"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParam"
                    },
                    {
                        "$ref": "#/parameters/spObjectIdParam"
                    },
                    {
                        "name": "checkMemberGroupsParam",
                        "in": "body",
                        "description": "A list of groups object ids.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/checkMemberGroupsParam"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The group objects ids that the user was a member of.",
                        "schema": {
                            "$ref": "#/definitions/checkMemberGroupsResponse"
                        }
                    },
                    "default": {
                        "$ref": "#/responses/unexpectedErrorResponse"
                    }
                }
            }
        }
    },
    "definitions": {
        "user": {
            "description": "A user in Azure Active Directory",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "accountEnabled": {
                            "description": "Indicates if the account is enabled",
                            "type": "boolean"
                        },
                        "assignedLicenses": {
                            "description": "The licenses assigned to the user",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/assignedLicense"
                            }
                        },
                        "assignedPlans": {
                            "description": "The license plans assigned to the user",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/assignedPlan"
                            }
                        },
                        "city": {
                            "description": "The city in which the user is located",
                            "type": "string"
                        },
                        "country": {
                            "description": "The country in which the user is located",
                            "type": "string"
                        },
                        "department": {
                            "description": "The name of the department in which the user works",
                            "type": "string"
                        },
                        "dirSyncEnabled": {
                            "description": "Indicates if this user is being synchronized between Azure AD and Windows Server AD",
                            "type": "boolean"
                        },
                        "displayName": {
                            "description": "The complete human readable name for the user",
                            "type": "string"
                        },
                        "facsimilieTelephoneNumber": {
                            "description": "The telephone number of the user's business fax machine.",
                            "type": "string"
                        },
                        "givenName": {
                            "description": "The given name (first name) of the user.",
                            "type": "string"
                        },
                        "immutableId": {
                            "readOnly": true,
                            "description": "This property is used to associate a Windows Server Active Directory user account to their Azure AD user object.",
                            "type": "string"
                        },
                        "jobTitle": {
                            "description": "The user's job title.",
                            "type": "string"
                        },
                        "lastDirSyncTime": {
                            "description": "Indicates the last time at which the object was updated during synchronization with Window Server Active Directory.",
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time"
                        },
                        "mail": {
                            "description": "The SMTP address for the user.",
                            "type": "string"
                        },
                        "mailNickName": {
                            "description": "The email alias for the user.",
                            "type": "string"
                        },
                        "mobile": {
                            "description": "The primary cellular telephone number for the user.",
                            "type": "string"
                        },
                        "onPremisesSecurityIdentifier": {
                            "readOnly": true,
                            "description": "Contains the Windows Server Active Directory security identifier (SID) for a synchronized user.",
                            "type": "string"
                        },
                        "otherMails": {
                            "description": "A list of additional email addresses for the user.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "passwordPolicies": {
                            "description": "Specifies the password policies for the user.  This value is a comma delimited string that may contain one or both of the following strings - DisableStrongPassword, DisablePasswordExpirtation",
                            "type": "string"
                        },
                        "passwordProfile": {
                            "description": "Specifies the password profile for the user.",
                            "$ref": "#/definitions/passwordProfile"
                        },
                        "physicalDeliveryOfficeName": {
                            "description": "The office location in the user's place of business.",
                            "type": "string"
                        },
                        "postalCode": {
                            "description": "The postal code for the user's postal address.",
                            "type": "string"
                        },
                        "preferredLanguage": {
                            "description": "The preferred language of the user.  For example - en-us.",
                            "type": "string"
                        },
                        "provisionedPlans": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/provisionedPlan"
                            }
                        },
                        "provisioningErrors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/provisioningError"
                            }
                        },
                        "proxyAddresses": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sipProxyAddress": {
                            "readOnly": true,
                            "description": "Specifies the voice over IP (VOIP) session initiation protocol (SIP) address for the user.",
                            "type": "string"
                        },
                        "state": {
                            "description": "The state or province of the the user's place of business..",
                            "type": "string"
                        },
                        "streetAddress": {
                            "description": "The street address of the user's place of business.",
                            "type": "string"
                        },
                        "surname": {
                            "description": "The user's surname (family name or last name).",
                            "type": "string"
                        },
                        "telephoneNumber": {
                            "description": "The user's telephone number at their place of business.",
                            "type": "string"
                        },
                        "thumbnailPhoto": {
                            "description": "A thumbnail photo to be displayed for the user.",
                            "type": "string",
                            "format": "byte"
                        },
                        "usageLocation": {
                            "type": "string",
                            "description": "A two letter country code indicating the country from which the user will be using Microsoft services.  Related to licensing."
                        },
                        "userPrincipalName": {
                            "description": "The user principal name (UPN) of the user.",
                            "type": "string"
                        },
                        "userType": {
                            "description": "A string value that can be used to classify users in your directory, such as Member or Guest.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "contact": {
            "description": "A contact in Azure Active Directory",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "city": {
                            "description": "The city in which the user is located",
                            "type": "string"
                        },
                        "country": {
                            "description": "The country in which the user is located",
                            "type": "string"
                        },
                        "department": {
                            "description": "The name of the department in which the user works",
                            "type": "string"
                        },
                        "dirSyncEnabled": {
                            "description": "Indicates if this user is being synchronized between Azure AD and Windows Server AD",
                            "type": "boolean"
                        },
                        "displayName": {
                            "description": "The complete human readable name for the user",
                            "type": "string"
                        },
                        "facsimilieTelephoneNumber": {
                            "description": "The telephone number of the user's business fax machine.",
                            "type": "string"
                        },
                        "givenName": {
                            "description": "The given name (first name) of the user.",
                            "type": "string"
                        },
                        "jobTitle": {
                            "description": "The user's job title.",
                            "type": "string"
                        },
                        "lastDirSyncTime": {
                            "description": "Indicates the last time at which the object was updated during synchronization with Window Server Active Directory.",
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time"
                        },
                        "mail": {
                            "description": "The SMTP address for the user.",
                            "type": "string"
                        },
                        "mailNickName": {
                            "description": "The email alias for the user.",
                            "type": "string"
                        },
                        "mobile": {
                            "description": "The primary cellular telephone number for the user.",
                            "type": "string"
                        },
                        "physicalDeliveryOfficeName": {
                            "description": "The office location in the user's place of business.",
                            "type": "string"
                        },
                        "postalCode": {
                            "description": "The postal code for the user's postal address.",
                            "type": "string"
                        },
                        "provisioningErrors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/provisioningError"
                            }
                        },
                        "proxyAddresses": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sipProxyAddress": {
                            "readOnly": true,
                            "description": "Specifies the voice over IP (VOIP) session initiation protocol (SIP) address for the user.",
                            "type": "string"
                        },
                        "state": {
                            "description": "The state or province of the the user's place of business..",
                            "type": "string"
                        },
                        "streetAddress": {
                            "description": "The street address of the user's place of business.",
                            "type": "string"
                        },
                        "surname": {
                            "description": "The user's surname (family name or last name).",
                            "type": "string"
                        },
                        "telephoneNumber": {
                            "description": "The user's telephone number at their place of business.",
                            "type": "string"
                        },
                        "thumbnailPhoto": {
                            "description": "A thumbnail photo to be displayed for the user.",
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            ]
        },
        "servicePrincipal": {
            "description": "A service principal (application instance/guest application) in Azure Active Directory",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "accountEnabled": {
                            "description": "Indicates whether the service principal is enabled.",
                            "type": "string"
                        },
                        "appDisplayName": {
                            "description": "The display name of the associated application.",
                            "type": "string"
                        },
                        "appId": {
                            "description": "The unique identifier of the associated application.  Not the objectId ... the appId",
                            "type": "string"
                        },
                        "appOwnerTenantId": {
                            "type": "string"
                        },
                        "appRoleAssignmentRequired": {
                            "description": "Indicates whether an app role assignment between a user and this application must exist prior to issuing a token for this application to a requesting user.",
                            "type": "boolean"
                        },
                        "appRoles": {
                            "description": "The application roles exposed by the associatd application.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/appRole"
                            }
                        },
                        "displayName": {
                            "description": "The display name of the service principal.",
                            "type": "string"
                        },
                        "errorUrl": {
                            "description": "A URL provided by the author of the application to report errors when using the application.",
                            "type": "string"
                        },
                        "homepage": {
                            "description": "The home page of the author of the application.",
                            "type": "string"
                        },
                        "keyCredentials": {
                            "description": "The collection of credentials associated with the service principal.  If linked to an associated application then this collection will be empty.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/keyCredential"
                            }
                        },
                        "logoutUrl": {
                            "type": "string"
                        },
                        "oauth2Permissions": {
                            "description": "The oAuth 2.0 permissions exposed by the associated application.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/oAuth2Permission"
                            }
                        },
                        "passwordCredentials": {
                            "description": "The collection of password credentials associated with the service principal.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/passwordCredential"
                            }
                        },
                        "publisherName": {
                            "description": "The name of the author/publisher of the associated application.  The publisher name is based on the name associated with the tenant into which the associated applicatino is published.",
                            "type": "string"
                        },
                        "replyUrl": {
                            "description": "The URLs that user tokens are sent to for sign in with the associated application.  The redirect URIs that the oAuth 2.0 authorization code and access tokens are sent to for the associated application.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "samlMetadataUrl": {
                            "type": "string"
                        },
                        "servicePrincipalNames": {
                            "description": "The URIs that identify the associated application.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "tags": {
                            "description": "Optional list of tags that you can apply to your service principals.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "application": {
            "description": "A service principal (application instance/guest application) in Azure Active Directory",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "appId": {
                            "description": "The unique identifier of the application.  Not the objectId ... the appId",
                            "type": "string"
                        },
                        "appRoles": {
                            "description": "The application roles exposed by the associatd application.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/appRole"
                            }
                        },
                        "availableToOtherTenants": {
                            "description": "Indicates whether or not the app is multi-tenant enabled.",
                            "type": "boolean"
                        },
                        "displayName": {
                            "description": "The display name of the service principal.",
                            "type": "string"
                        },
                        "errorUrl": {
                            "description": "A URL provided by the author of the application to report errors when using the application.",
                            "type": "string"
                        },
                        "homepage": {
                            "description": "The home page of the author of the application.",
                            "type": "string"
                        },
                        "identifierUris": {
                            "description": "The URIs that identify the application.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "keyCredentials": {
                            "description": "The collection of credentials associated with the service principal.  If linked to an associated application then this collection will be empty.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/keyCredential"
                            }
                        },
                        "knownClientApplications": {
                            "description": "Client applications that are tied to an application acting as a resource application.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "logoutUrl": {
                            "type": "string"
                        },
                        "mainLogo": {
                            "description": "The main logo for the application",
                            "type": "string",
                            "format": "byte"
                        },
                        "oauth2AllowImplicitFlow": {
                            "description": "Specifies whether this web application can request tokens using the oAuth 2.0 implicit flow.  The default is false.",
                            "type": "boolean"
                        },
                        "oauth2AllowUrlPathMatching": {
                            "description": "Specifies whether during a token Request Azure AD will allow path matching of the redirect URI against the applications collection of replyURLs.  The default is false.",
                            "type": "boolean"
                        },
                        "oauth2Permissions": {
                            "description": "The oAuth 2.0 permissions exposed by the associated application.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/oAuth2Permission"
                            }
                        },
                        "oAuth2RequiredPostResponse": {
                            "description": "Specifies wheter during an oAuth 2.0 token request Azure AD will accept both POST and GET HTTP requests.  The default is false.",
                            "type": "boolean"
                        },
                        "passwordCredentials": {
                            "description": "The collection of password credentials associated with the service principal.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/passwordCredential"
                            }
                        },
                        "publicClient": {
                            "description": "Indicates whether the application is a public client vs. a confidential client.  Typically used for mobile applications.",
                            "type": "boolean"
                        },
                        "replyUrls": {
                            "description": "The URLs that user tokens are sent to for sign in with the associated application.  The redirect URIs that the oAuth 2.0 authorization code and access tokens are sent to for the associated application.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "requiredResourceAccess": {
                            "description": "The collection of oAuth2Permissions and application roles that this application requires in order to function.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/requiredResourceAccess"
                            }
                        },
                        "samlMetadataUrl": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "group": {
            "description": "A group in Azure Active Directory",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "description": {
                            "description": "A description of the group",
                            "type": "string"
                        },
                        "dirSyncEnabled": {
                            "description": "Indicates if this user is being synchronized between Azure AD and Windows Server AD",
                            "type": "boolean",
                            "readOnly": true
                        },
                        "displayName": {
                            "description": "The complete human readable name for the user",
                            "type": "string"
                        },
                        "lastDirSyncTime": {
                            "description": "Indicates the last time at which the object was updated during synchronization with Window Server Active Directory.",
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time"
                        },
                        "mail": {
                            "description": "The SMTP address for the user.",
                            "type": "string"
                        },
                        "mailEnabled": {
                            "type": "boolean",
                            "description": "Indicates whether the group is mail-enabled."
                        },
                        "mailNickName": {
                            "description": "The email alias for the user.",
                            "type": "string"
                        },
                        "onPremisesSecurityIdentifier": {
                            "readOnly": true,
                            "description": "Contains the Windows Server Active Directory security identifier (SID) for a synchronized group.",
                            "type": "string"
                        },
                        "provisioningErrors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/provisioningError"
                            }
                        },
                        "proxyAddresses": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "securityEnabled": {
                            "description": "Indicates whether the group is a security group.",
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "tenantDetail": {
            "description": ".",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "assignedPlans": {
                            "description": "The collection of service plans associated with the tenant.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/assignedPlan"
                            }
                        },
                        "city": {
                            "type": "string"
                        },
                        "companyLastDirSyncTime": {
                            "description": "The last date and time that directory synchronization occurred.",
                            "type": "string",
                            "format": "date-time"
                        },
                        "country": {
                            "type": "string"
                        },
                        "countryLetterCode": {
                            "type": "string"
                        },
                        "dirSyncEnabled": {
                            "type": "boolean"
                        },
                        "displayName": {
                            "type": "string"
                        },
                        "marketingNotificationEmails": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "postalCode": {
                            "type": "string"
                        },
                        "preferredLanguage": {
                            "type": "string"
                        },
                        "provisionedPlans": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/provisionedPlan"
                            }
                        },
                        "provisioningErrors": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/provisioningError"
                            }
                        },
                        "state": {
                            "type": "string"
                        },
                        "street": {
                            "type": "string"
                        },
                        "technicalNotificationMails": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "telephoneNumber" : {
                            "type": "string"
                        },
                        "verifiedDomains" : {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/verifiedDomain"
                            }
                        }
                    }
                }
            ]
        },
        "verifiedDomain": {
            "properties": {
                "capabilities": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "initial": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "directoryRole": {
            "description": "A directory role in Azure Active Directory",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "description": {
                            "description": "A description of the directory role",
                            "type": "string"
                        },
                        "displayName": {
                            "description": "The complete human readable name for the directory role",
                            "type": "string"
                        },
                        "isSystem": {
                            "description": "Indicates whether the role is a system role.",
                            "type": "boolean"
                        },
                        "roleDisabled": {
                            "description": "Indicates whether the role is disabled.",
                            "type": "boolean"
                        },
                        "roleTemplateId": {
                            "description": "The object id of the directory role template that the role is based on.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "directoryRoleTemplate": {
            "description": "A directory role template in Azure Active Directory",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "description": {
                            "description": "A description of the directory role template",
                            "type": "string"
                        },
                        "displayName": {
                            "description": "The complete human readable name for the directory role that this template was created for.",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "device": {
            "description": "A device registered in Azure Active Directory",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "accountEnabled": {
                            "description": "Indicates if the account is enabled",
                            "type": "boolean"
                        },
                        "alternativeSecurityIds": {
                            "description": "An array of alternative security identifiers for the device.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/alternativeSecurityId"
                            }
                        },
                        "approximateLastLogonTimeStamp": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "deviceId": {
                            "type": "string"
                        },
                        "deviceObjectVersion": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "deviceOSType": {
                            "type": "string"
                        },
                        "deviceOSVersion": {
                            "type": "string"
                        },
                        "devicePhysicalIds": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "displayName": {
                            "description": "The complete human readable name for the user",
                            "type": "string"
                        },
                        "dirSyncEnabled": {
                            "description": "Indicates if this user is being synchronized between Azure AD and Windows Server AD",
                            "type": "boolean"
                        },
                        "lastDirSyncTime": {
                            "description": "Indicates the last time at which the object was updated during synchronization with Window Server Active Directory.",
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "extensionProperty": {
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "appDisplayName": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "dataType": {
                            "type": "string"
                        },
                        "isSyncedFromOnPremises": {
                            "type": "string"
                        },
                        "targetObjects": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "appRole": {
            "properties": {
                "allowedMemberTypes": {
                    "description": "Specifies which directory object types can be members of this application role.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "description": "The description of the application role.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The display name of the application role.",
                    "type": "string"
                },
                "id": {
                    "description": "The unique identifier of the application role.",
                    "type": "string"
                },
                "isEnabled": {
                    "description": "Indicates whether or not this role is enabled.",
                    "type": "boolean"
                },
                "value": {
                    "description": "The value provided to an application as a role claim.",
                    "type": "string"
                }
            }
        },
        "requiredResourceAccess": {
            "properties": {
                "resourceAppId": {
                    "description": "The app id of the resource application.",
                    "type": "string"
                },
                "resourceAccess": {
                    "description": "The collection of oAuth2Permissions and application roles.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resourceAccess"
                    }
                }
            }
        },
        "resourceAccess": {
            "properties": {
                "id": {
                    "description": "the unique idenfier of the oAuth2Permission or application role.",
                    "type": "string"
                },
                "type": {
                    "description": "Specifies whether the resource access is an oAuth2Permission (scope) or an application role (role)",
                    "type": "string"
                }
            }
        },
        "keyCredential": {
            "properties": {
                "customKeyIdentifier": {
                    "type": "string",
                    "format": "byte"
                },
                "endDate": {
                    "description": "The date and time at which the credential expires",
                    "type": "string",
                    "format": "date-time"
                },
                "keyId": {
                    "description": "The unique identifier of the key.",
                    "type": "string"
                },
                "startDate": {
                    "description": "The date and time at which the credential becomes valid.",
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "description": "The type of credential.  Symmetric, Asymmetric",
                    "type": "string"
                },
                "usage": {
                    "description": "Describe how this credential is to be used.",
                    "type": "string"
                },
                "value": {
                    "description": "The secret value",
                    "type": "string"
                }
            }
        },
        "passwordCredential": {
            "properties": {
                "customKeyIdentifier": {
                    "type": "string",
                    "format": "byte"
                },
                "endDate": {
                    "description": "The date and time at which the credential expires",
                    "type": "string",
                    "format": "date-time"
                },
                "keyId": {
                    "description": "The unique identifier of the key.",
                    "type": "string"
                },
                "startDate": {
                    "description": "The date and time at which the credential becomes valid.",
                    "type": "string",
                    "format": "date-time"
                },
                "value": {
                    "description": "The secret value",
                    "type": "string"
                }
            }
        },
        "oAuth2Permission": {
            "properties": {
                "adminConsentDescription": {
                    "description": "The description to provide to admins relative to this permission.",
                    "type": "string"
                },
                "adminConsentDisplayName": {
                    "description": "The name of the permission to display to admins during admin consent.",
                    "type": "string"
                },
                "id": {
                    "description": "The unique scope permission identifier inside the oauth2Permissions collection.",
                    "type": "string"
                },
                "isEnabled": {
                    "description": "Indicates whether or not this permission is currentl enabled.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Indicates who can consent to this permission: admin or user",
                    "type": "string"
                },
                "userConsentDescription": {
                    "description": "The description to provide to users relative to this permission.",
                    "type": "string"
                },
                "userConsentDisplayName": {
                    "description": "The display name of the permission that appears in the end user consent experience.",
                    "type": "string"
                }
            }
        },
        "oAuth2PermissionGrant": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "consentType": {
                    "type": "string"
                },
                "expiryTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "objectId": {
                    "type": "string"
                },
                "principalId": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "appRoleAssignment": {
            "description": "Captures the details of the assignment between a user and an application",
            "required": [
                "resourceId",
                "id",
                "principalId"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "creationTimestamp": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "string",
                            "description": "The role id that was assigned to the principal.  This role is defined by the target resource - application."
                        },
                        "principalDisplayName": {
                            "type": "string",
                            "description": "The display name of the principal that was assigned to the resource - role."
                        },
                        "principalId": {
                            "type": "string",
                            "description": "The object id of the principal being granted access."
                        },
                        "principalType": {
                            "type": "string",
                            "description": "The type of principal assigned to the target resource/application.  Typically user or application."
                        },
                        "resourceDisplayName": {
                            "type": "string",
                            "description": "The display name of the resource the principal was assigned to."
                        },
                        "resourceId": {
                            "type": "string",
                            "description": "The object id of the resource the principal was assigned to."
                        }
                    }
                }
            ]
        },
        "alternativeSecurityId": {
            "properties": {
                "identityProvider": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "format": "byte"
                },
                "type": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "provisioningError": {
            "properties": {
                "errorDetail": {
                    "description": "A description of the error",
                    "type": "string"
                },
                "resolved": {
                    "description": "True if the error was resovled.",
                    "type": "string"
                },
                "serviceInstance": {
                    "description": "The service instance where the error occurred.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "The date and time at which the error occurred.",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "provisionedPlan": {
            "properties": {
                "capabilityStatus": {
                    "description": "The status of the capability.",
                    "type": "string"
                },
                "provisioningStatus": {
                    "description": "The status of the provisioning.",
                    "type": "string"
                },
                "service": {
                    "description": "The name of the service.",
                    "type": "string"
                }
            }
        },
        "passwordProfile": {
            "properties": {
                "password": {
                    "description": "The password for the user.",
                    "type": "string"
                },
                "forceChangePasswordNextLogin": {
                    "description": "Indicates whether the user is required to change their password the next time they authenticate.",
                    "type": "boolean"
                }
            }
        },
        "assignedPlan": {
            "properties": {
                "capabilityStatus": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "assignedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "servicePlanId": {
                    "type": "string"
                }
            }
        },
        "assignedLicense": {
            "properties": {
                "skuId": {
                    "type": "string"
                },
                "disabledPlans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "servicePlanInfo": {
            "properties": {
                "servicePlanId": {
                    "description": "The unique identifier of the service plan.",
                    "type": "string"
                },
                "servicePlanName": {
                    "description": "The name of the service plan.",
                    "type": "string"
                }
            }
        },
        "subscribedSku": {
            "description": "Represents a subsription to a Microsoft service.",
            "allOf": [
                {
                    "$ref": "#/definitions/directoryObject"
                },
                {
                    "properties": {
                        "capabilityStatus": {
                            "type": "string"
                        },
                        "consumedUnits": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "prepaidUnits": {
                            "$ref": "#/definitions/licenseUnitDetail"
                        },
                        "servicePlans": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/servicePlanInfo"
                            }
                        },
                        "skuId": {
                            "type": "string"
                        },
                        "skuPartNumber": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "licenseUnitDetail": {
            "description": "The prepaidUnits property of the SubscribedSku entity is of type LicenseUnitsDetail",
            "properties": {
                  "enabled": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "suspended": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "warning": {
                      "type": "integer",
                      "format": "int32"
                  }
              }
        },
        "trustedCAsForPasswordlessAuth": {
		    "description": "Set of certificate authorities to validate the trust chain while performing passwordless authentication.",
            "properties": {
                  "id": {
                    "type": "string"
                  },
                  "certificateAuthorities": {
                      "type": "array",
                      "items": {
                          "$ref": "#/definitions/certificateAuthorityInformation"
                      }
                  }
              }
        },
        "certificateAuthorityInformation": {
            "properties": {
                  "authorityType": {
                    "type": "string"
                  },
				  "crlDistributionPoint": {
                    "type": "string"
                  },
				  "deltaCrlDistributionPoint": {
                    "type": "string"
                  },
				  "trustedCertificate": {
                    "type": "string"
                  },
				  "trustedIssuer": {
                    "type": "string",
					"format": "binary"
                  },
				  "trustedIssuerSki": {
                    "type": "string"
                  }
              }
        },
        "odata.link": {
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string",
                    "description": "A URL identifying a specific object in Azure Active Directory.  Typically: https://graph.windows.net/[tenantId]/directoryObjects/[objectId]"
                }
            }
        },
        "odata.error": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "$ref": "#/definitions/message"
                },
                "fields": {
                    "type": "string"
                }
            }
        },
        "odataresponse": {
            "description": "Represents a subsription to a Microsoft service.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/directoryObject"
                            }
                        }
                    }
                }
            ]
        },
        "assignLicenseParam": {
            "properties": {
                "addLicenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/assignedLicense"
                    }

                },
                "removeLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }

                }
            }
        },
        "checkMemberGroupsParam": {
            "properties" : {
                "groupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "checkMemberGroupsResponse": {
            "properties": {
                "odata.metadata": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "getUsersResponse": {
            "description": "A list of users.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        }
                    }
                }
            ]
        },
        "getDirectoryRoleTemplateResponse": {
           "description": "A list of directory role templates.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/directoryRoleTemplate"
                            }
                        }
                    }
                }
            ]
        },
        "getTenantDetailsResponse": {
            "description": "A list of tenant details.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tenantDetail"
                            }
                        }
                    }
                }
            ]
        },
        "getSubscribedSkuResponse": {
            "description": "A list of subscribed skus",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/subscribedSku"
                            }
                        }
                    }
                }
            ]
        },
        "getDirectoryRolesResponse": {
            "description": "A list of directory roles.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/directoryRole"
                            }
                        }
                    }
                }
            ]
        },
        "getContactsResponse": {
            "description": "A list of contacts.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact"
                            }
                        }
                    }
                }
            ]
        },
        "getDevicesResponse": {
            "description": "A list of devices.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/device"
                            }
                        }
                    }
                }
            ]
        },
        "getCertificateAuthorityInformationsResponse": {
            "description": "A list of certificate authorities.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/certificateAuthorityInformation"
                            }
                        }
                    }
                }
            ]
        },
        "getGroupsResponse": {
           "description": "Represents a subsription to a Microsoft service.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/group"
                            }
                        }
                    }
                }
            ]
        },
        "getApplicationsResponse": {
            "description": "Represents a subsription to a Microsoft service.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/application"
                            }
                        }
                    }
                }
            ]
        },
        "getServicePrincipalsResponse": {
            "description": "Represents a subsription to a Microsoft service.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/servicePrincipal"
                            }
                        }
                    }
                }
            ]
        },
        "getDirectoryObjectsResponse": {
            "description": "A list of directory objects.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/directoryObject"
                            }
                        }
                    }
                }
            ]
        },
        "getAppRoleAssignmentsResponse": {
            "description": "A list of app role assignments.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/appRoleAssignment"
                            }
                        }
                    }
                }
            ]
        },
        "getExtensionPropertiesResponse": {
            "description": "A list of extension properties.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/extensionProperty"
                            }
                        }
                    }
                }
            ]
        },
        "getOAuth2PermissionGrantsResponse": {
            "description": "A list of oAuth2PermissionGrants.",
            "allOf": [
                {
                    "$ref": "#/definitions/odataResponseBase"
                },
                {
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/oAuth2PermissionGrant"
                            }
                        }
                    }
                }
            ]
        },
        "message": {
            "properties": {
                "lang": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "directoryObject": {
            "discriminator": "objectType",
            "properties": {
                "deletionTimeStamp": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time"
                },
                "objectId": {
                    "readOnly": true,
                    "description": "The unique identifier for the user.",
                    "type": "string"
                },
                "objectType": {
                    "readOnly": true,
                    "description": "A string that identifies the object type.",
                    "type": "string"
                }
            }
        },
        "odataResponseBase":{
            "discriminator": "odata.metadata",
            "properties": {
                "odata.nextLink": {
                    "type": "string"
                },
                "odata.metadata": {
                    "type": "string"
                }
            }
        }

    }
}